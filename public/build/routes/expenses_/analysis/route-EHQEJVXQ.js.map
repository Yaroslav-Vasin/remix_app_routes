{
  "version": 3,
  "sources": ["../../../../../app/components/expenses/ChartBar.tsx", "../../../../../app/components/expenses/Char.tsx", "../../../../../app/components/expenses/ExpensStatistics.tsx", "../../../../../app/components/expenses/cell/Cell.tsx", "../../../../../app/routes/expenses_/analysis/route.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/expenses/ChartBar.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/expenses/ChartBar.tsx\");\n  import.meta.hot.lastModified = \"1713188448147.5713\";\n}\n// REMIX HMR END\n\nconst ChartBar = ({\n  maxValue,\n  value,\n  label\n}) => {\n  let barFillHeight = \"0%\";\n  if (maxValue > 0) {\n    barFillHeight = Math.round(value / maxValue * 100) + \"%\";\n  }\n  return <div className=\"chart-bar\">\n      <div className=\"h-40 flex flex-col flex-end\">\n        <div className=\"bg-gray-800 rounded-md\" style={{\n        height: barFillHeight\n      }}></div>\n      </div>\n      <div className=\"mt-2\">{label}</div>\n    </div>;\n};\n_c = ChartBar;\nexport default ChartBar;\nvar _c;\n$RefreshReg$(_c, \"ChartBar\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/expenses/Char.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/expenses/Char.tsx\");\n  import.meta.hot.lastModified = \"1713190528235.5872\";\n}\n// REMIX HMR END\n\nimport ChartBar from \"./ChartBar\";\nfunction Chart({\n  expenses\n}) {\n  const chartDataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n  for (const expense of expenses) {\n    const expenseMonth = new Date(expense.date).getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  const dataPointValues = chartDataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  return <section>\n      <h2>Monthly Expenses</h2>\n      <ol className=\"grid grid-cols-12 justify-items-center gap-3 p-6 rounded-md border-2 border-black\">\n        {chartDataPoints.map(dataPoint => <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMaximum} label={dataPoint.label} />)}\n      </ol>\n    </section>;\n}\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/expenses/ExpensStatistics.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/expenses/ExpensStatistics.tsx\");\n  import.meta.hot.lastModified = \"1713189870622.5608\";\n}\n// REMIX HMR END\n\nimport { useMemo } from \"react\";\nimport Cell from \"./cell/Cell\";\nfunction calculateSummaryStatistics(expenses) {\n  const amounts = expenses.map(expense => +expense.amount);\n  const maxAmount = Math.max(...amounts);\n  const minAmount = Math.min(...amounts);\n  const sum = expenses.reduce((prevVal, curVal) => curVal.amount + prevVal, 0);\n  const mean = sum / expenses.length;\n  return {\n    minAmount,\n    maxAmount,\n    sum,\n    mean\n  };\n}\nfunction ExpenseStatistics({\n  expenses\n}) {\n  _s();\n  const {\n    minAmount,\n    maxAmount,\n    sum,\n    mean\n  } = useMemo(() => calculateSummaryStatistics(expenses), [expenses]);\n  return <section>\n      <h2>Summary Statistics</h2>\n      <dl className=\"grid grid-cols-2 grid-rows-2 gap-8 \" id=\"expense-statistics\">\n        <Cell number={sum} label={\"Total\"} />\n        <Cell number={mean} label={\"Average\"} />\n        <Cell number={minAmount} label={\"Min. Amount\"} />\n        <Cell number={maxAmount} label={\"Max. Amount\"} />\n      </dl>\n    </section>;\n}\n_s(ExpenseStatistics, \"p2xC83GiILF2qC9FD1C02JEZGaY=\");\n_c = ExpenseStatistics;\nexport default ExpenseStatistics;\nvar _c;\n$RefreshReg$(_c, \"ExpenseStatistics\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/expenses/cell/Cell.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/expenses/cell/Cell.tsx\");\n  import.meta.hot.lastModified = \"1713189837115.2886\";\n}\n// REMIX HMR END\n\nexport default function Cell({\n  number,\n  label\n}) {\n  return <div>\n      <dt className=\"text-xl\">{label}</dt>\n      <dd className=\"m-0 text-4xl\">${number.toFixed(2)}</dd>\n    </div>;\n}\n_c = Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/expenses_/analysis/route.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/expenses_/analysis/route.tsx\");\n  import.meta.hot.lastModified = \"1713190601749.9841\";\n}\n// REMIX HMR END\n\nconst DUMMY_EXPENSES = [{\n  id: \"el\",\n  title: \"New TV\",\n  amount: 799.49,\n  date: new Date().toISOString()\n}, {\n  id: \"e2\",\n  title: \"Car Insurance\",\n  amount: 294.67,\n  date: new Date().toISOString()\n}];\nimport Chart from \"~/components/expenses/Char\";\nimport ExpenseStatistics from \"~/components/expenses/ExpensStatistics\";\n\n// expenses/analysis\nexport default function AnalysisExpensesPage() {\n  return <main className=\"container grid grid-rows-2 gap-4 mx-auto px-4 py-4 sm:px-6 lg:px-8\">\n      <Chart expenses={DUMMY_EXPENSES} />\n      <ExpenseStatistics expenses={DUMMY_EXPENSES} />\n    </main>;\n}\n_c = AnalysisExpensesPage;\nvar _c;\n$RefreshReg$(_c, \"AnalysisExpensesPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c"]
}
